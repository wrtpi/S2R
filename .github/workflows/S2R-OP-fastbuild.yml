#=================================================
# https://github.com/wrtpi/S2R
# Description: FAST building OpenWrt with Github Actions and Docker!
# Lisence: MIT
# Author: Tony
#=================================================

env:
  # DO NOT CHANGE the following here, set them only in forked repo's Settings->Secrets page
  # You don't need to set docker_registry if you are using the default Docker Hub
  DK_REGISTRY: ${{secrets.DOCKER_REGISTRY}}
  DK_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DK_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  TMATE_ENCRYPT_PASSWORD: ${{secrets.TMATE_ENCRYPT_PASSWORD}}

name: S2R OpenWrt FastBuild


on: 
  repository_dispatch:
  release:
    types: [published]

#  push:
#    branches: 
#      - master
#    paths:
#      - 'configs/.config'

#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]
#  watch:
#    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04
    # For `github.event`'s structure, see: https://developer.github.com/v3/activity/events/types/
    # Do not modify the trigger methods here, customize them in the `on` section
    if: |
      github.event_name == 'repository_dispatch'
      || github.event_name == 'deployment'
    name: ${{matrix.title}} ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        mode:
          - normal
          - test
        # ########### Add your target name below ###########
        # E.g. target: [x86_64, wdr4310v1]
        target: [1806, snapshot]
        include:
        - mode: normal
          title: Build
        - mode: test
          title: Fast check
    env:
      HOST_WORK_DIR: ${{github.workspace}}
      BUILD_MODE: ${{matrix.mode}}
      BUILD_TARGET: ${{matrix.target}}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Init build env
      run: scripts/cisteps/01-init_env.sh

    - name: Check if skip this job
      run: scripts/cisteps/02-check_target.sh

    - name: Clean up for extra space
      if: env.SKIP_TARGET == '0' && env.TEST != '1'
      run: scripts/cisteps/03-clean_up.sh

    - name: Set up Docker Buildx
      id: buildx
      if: env.SKIP_TARGET == '0'
      uses: crazy-max/ghaction-docker-buildx@v3.3.0
      with:
        buildx-version: latest

    - name: Configure docker
      if: env.SKIP_TARGET == '0'
      run: scripts/cisteps/04-configure_docker.sh

    - name: Check status of builders
      if: env.SKIP_TARGET == '0'
      run: scripts/cisteps/05-check_builders.sh

    - name: '[Debug] Wait for SSH connection (timeout 5min)'
      if: env.SKIP_TARGET == '0' && env.OPT_DEBUG == '1' && env.TEST != '1'
      env:
        TIMEOUT_MIN: 5
      uses: tete1030/safe-debugger-action@dev

    - name: Get builder
      if: env.SKIP_TARGET == '0'
      run: scripts/cisteps/06-get_builder.sh

    - name: Clone/update OpenWrt
      if: env.SKIP_TARGET == '0'
      run: scripts/cisteps/07-download_openwrt.sh

    - name: Apply customizations
      if: env.SKIP_TARGET == '0'
      run: scripts/cisteps/08-customize.sh

    # Allow intermediate customization
    - name: '[Debug/Menuconfig] Wait for SSH connection (timeout 30min)'
      if: env.SKIP_TARGET == '0' && env.OPT_DEBUG == '1' && env.TEST != '1'
      env:
        TMATE_DOCKER_CONTAINER: ${{env.BUILDER_CONTAINER_ID}}
      uses: tete1030/safe-debugger-action@dev

    - name: Prepare config file
      if: env.SKIP_TARGET == '0'
      run: scripts/cisteps/09-prepare_config.sh

    - name: Download packages
      if: env.SKIP_TARGET == '0'
      run: scripts/cisteps/10-download_packages.sh

    - name: Print disk space
      if: env.SKIP_TARGET == '0'
      run: df -h

    - name: Compile firmware and packages with multiple threads
      id: mtcompile
      if: env.SKIP_TARGET == '0'
      continue-on-error: true
      run: scripts/cisteps/11-compile_multi.sh

    - name: Compile firmware and packages with single threads when failed
      if: env.SKIP_TARGET == '0' && steps.mtcompile.outputs.started == '1' && steps.mtcompile.outputs.status != 'success'
      run: scripts/cisteps/12-compile_single.sh

    - name: Print disk space
      if: env.SKIP_TARGET == '0'
      run: df -h

    # failure checking
    - name: '[Failure/Debug] Wait for SSH connection (timeout 30min)'
      if: |
        env.SKIP_TARGET == '0' && !cancelled()
        && (job.status == 'failure' || (env.OPT_DEBUG == '1' && env.TEST != '1'))
      env:
        TMATE_DOCKER_CONTAINER: ${{env.BUILDER_CONTAINER_ID}}
      uses: tete1030/safe-debugger-action@dev

    # - name: Upload bin directory
    #   uses: actions/upload-artifact@main
    #   if: env.SKIP_TARGET == '0' && !cancelled()
    #   with:
    #     name: OpenWrt_bin_${{env.BUILD_TARGET}}
    #     path: ${{env.HOST_BIN_DIR}}

    - name: Organize files
      id: organize
      if: env.SKIP_TARGET == '0' && !cancelled()
      run: scripts/cisteps/13-organize_files.sh

    - name: Upload firmware to cloud
      if: env.SKIP_TARGET == '0' && env.TEST != '1' && env.OPT_PACKAGE_ONLY != '1' && steps.organize.outputs.status == 'success' && !cancelled()
      env:
        TG_BOT_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}
        TG_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
        FIRMWARE_VERSION: ${{matrix.target}}
      run: scripts/cisteps/14-upload_firmware.sh

    - name: Upload firmware
      uses: actions/upload-artifact@main
      if: env.SKIP_TARGET == '0' && env.TEST != '1' && env.OPT_PACKAGE_ONLY != '1' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{env.BUILD_TARGET}}
        path: openwrt_firmware

    - name: Upload packages
      uses: actions/upload-artifact@main
      if: env.SKIP_TARGET == '0' && env.TEST != '1' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_packages_${{env.BUILD_TARGET}}
        path: ${{env.HOST_BIN_DIR}}

    - name: Upload builder
      if: |
        env.SKIP_TARGET == '0' && !cancelled() && (
          job.status == 'success'
          || env.OPT_PUSH_WHEN_FAIL == '1'
        )
      run: scripts/cisteps/15-upload_builder.sh

    # failure checking
    - name: '[Failure/Debug] wait for SSH connection (timeout 30min. You are safe to cancel the job now.)'
      if: |
        env.SKIP_TARGET == '0' && !cancelled()
        && (job.status == 'failure' || (env.OPT_DEBUG == '1' && env.TEST != '1'))
      uses: tete1030/safe-debugger-action@dev
  clean:
    needs: build
    name: Cleanup old artifacts
    runs-on: ubuntu-18.04
    steps:
    - name: Cleanup Old Action Artifacts
      uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{secrets.GITHUB_TOKEN}}
        expire-in: 1d
